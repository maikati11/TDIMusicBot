const axios = require('axios'); // –ò–∑–ø–æ–ª–∑–≤–∞–º–µ axios –∑–∞ HTTP –∑–∞—è–≤–∫–∏
const { distubeOptions } = require('./config/config.js');
const fs = require('fs');
const path = require('path');
const DisTube = require('distube');
const connectDB = require('./database');
const PlayerManager = require('./player/PlayerManager');
const { printWatermark } = require('./config/type.js');
require('dotenv').config(); // –ó–∞—Ä–µ–∂–¥–∞ .env —Ñ–∞–π–ª–∞, –∞–∫–æ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞

// –°–≤—ä—Ä–∑–≤–∞–Ω–µ –∫—ä–º –±–∞–∑–∞—Ç–∞ –¥–∞–Ω–Ω–∏
connectDB();
printWatermark();

// –ö–æ–ª–µ–∫—Ü–∏–∏ –∑–∞ –∫–æ–º–∞–Ω–¥–∏
const commands = new Map(); // –í–º–µ—Å—Ç–æ client.commands
const playerManager = new PlayerManager(null, distubeOptions); // playerManager –Ω–µ –µ –∑–∞–≤–∏—Å–∏–º –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞

// –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –∫–æ–º–∞–Ω–¥–∏
const commandsPath = path.join(__dirname, './commands');
const commandFiles = fs.readdirSync(commandsPath).filter(file => file.endsWith('.js'));

for (const file of commandFiles) {
  const command = require(path.join(commandsPath, file));
  if (command && command.data && command.data.name) { // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –≤–∞–ª–∏–¥–Ω–∏ –∫–æ–º–∞–Ω–¥–∏
    commands.set(command.data.name, command);
  }
}

// –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Å—ä–±–∏—Ç–∏—è
const eventsPath = path.join(__dirname, './events');
const eventFiles = fs.readdirSync(eventsPath).filter(file => file.endsWith('.js'));

for (const file of eventFiles) {
  const filePath = path.join(eventsPath, file);
  const event = require(filePath);
  if (event && event.name) { // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –≤–∞–ª–∏–¥–Ω–∏ —Å—ä–±–∏—Ç–∏—è
    // –¢—É–∫ –º–æ–∂–µ—à –¥–∞ –¥–æ–±–∞–≤–∏—à –ª–æ–≥–∏–∫–∞ –∑–∞ —Å—ä–±–∏—Ç–∏—è, –∞–∫–æ –∏–º–∞—à –Ω—É–∂–¥–∞
  }
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞ –∏–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
const sendMessage = async (channelId, content) => {
  try {
    await axios.post(
      `https://discord.com/api/v10/channels/${channelId}/messages`,
      { content },
      {
        headers: {
          'Authorization': `Bot ${process.env.TOKEN}`,
          'Content-Type': 'application/json',
        },
      }
    );
    console.log('Message sent!');
  } catch (error) {
    console.error('Error sending message:', error.response ? error.response.data : error);
  }
};

// Express —Å—ä—Ä–≤—ä—Ä –∑–∞ —É–µ–± –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
const express = require("express");
const app = express();
const port = process.env.PORT || 3000; // –ò–∑–ø–æ–ª–∑–≤–∞–π –ø—Ä–æ–º–µ–Ω–ª–∏–≤–∞ –∑–∞ –ø–æ—Ä—Ç–∞
app.get('/', (req, res) => {
    const imagePath = path.join(__dirname, 'index.html');
    res.sendFile(imagePath);
});

app.listen(port, () => {
    console.log(`üîó Listening to GlaceYT : http://localhost:${port}`);
});

// –ü—Ä–∏–º–µ—Ä –∑–∞ –∏–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ (–∑–∞–º–µ–Ω–∏ —Å —Ä–µ–∞–ª–µ–Ω –∫–∞–Ω–∞–ª)
const exampleChannelId = 'YOUR_CHANNEL_ID'; // –ó–∞–º–µ–Ω–∏ —Å ID –Ω–∞ –∫–∞–Ω–∞–ª–∞
sendMessage(exampleChannelId, 'Hello from my bot!');
